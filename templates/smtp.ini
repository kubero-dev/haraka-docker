; address to listen on (default: all IPv6 and IPv4 addresses, port 25)
; use "[::0]:25" to listen on IPv6 and IPv4 (not all OSes)
;listen=[::0]:25

; Note you can listen on multiple IPs/ports using commas:
;listen=127.0.0.1:2529,127.0.0.2:2529,127.0.0.3:2530
{#- | smtp.ini | HARAKA_SMTP_LISTEN | [::0]:8025 |   | #}
listen={{ env['HARAKA_SMTP_LISTEN'] or '[::0]:8025' }}

; public IP address (default: none)
; If your machine is behind a NAT, some plugins (SPF, GeoIP) gain features
; if they know the servers public IP. If 'stun' is installed, Haraka will
; try to figure it out. If that doesn't work, set it here.
;public_ip=N.N.N.N
{#- | smtp.ini | HARAKA_SMTP_PUBLIC_IP |   |   | #}
{{ 'public_ip=' + env['HARAKA_SMTP_PUBLIC_IP'] if env['HARAKA_SMTP_PUBLIC_IP'] else '' }}

; Time in seconds to let sockets be idle with no activity
;inactivity_timeout=300
{#- | smtp.ini | HARAKA_SMTP_INACTIVITY_TIMEOUT |   |   | #}
{{ 'inactivity_timeout=' + env['HARAKA_SMTP_INACTIVITY_TIMEOUT'] if env['HARAKA_SMTP_INACTIVITY_TIMEOUT'] else '' }}

; Drop privileges to this user/group
;user=smtp
;group=smtp
{#- | smtp.ini | HARAKA_SMTP_USER |   |   | #}
{#- | smtp.ini | HARAKA_SMTP_GROUP |   |   | #}
{{ 'user=' + env['HARAKA_SMTP_USER'] if env['HARAKA_SMTP_USER'] else '' }}
{{ 'group=' + env['HARAKA_SMTP_GROUP'] if env['HARAKA_SMTP_GROUP'] else '' }}

; Don't stop Haraka if plugins fail to compile
;ignore_bad_plugins=0
{#- | smtp.ini | HARAKA_SMTP_IGNORE_BAD_PLUGINS |   |   | #}
{{ 'ignore_bad_plugins=' + env['HARAKA_SMTP_IGNORE_BAD_PLUGINS'] if env['HARAKA_SMTP_IGNORE_BAD_PLUGINS'] else '' }}

; Run using cluster to fork multiple backend processes
nodes=cpus

; Daemonize
;daemonize=true
;daemon_log_file=/var/log/haraka.log
;daemon_pid_file=/var/run/haraka.pid

; Spooling
; Save memory by spooling large messages to disk
;spool_dir=/var/spool/haraka
; Specify -1 to never spool to disk
; Specify 0 to always spool to disk
; Otherwise specify a size in bytes, once reached the
; message will be spooled to disk to save memory.
;spool_after=

; Force Shutdown Timeout
; - Haraka tries to close down gracefully, but if everything is shut down
;   after this time it will hard close. 30s is usually long enough to
;   wait for outbound connections to finish.
;force_shutdown_timeout=30
{#- | smtp.ini | HARAKA_SMTP_FORCE_SHUTDOWN_TIMEOUT | 30 |   | #}
{{ 'force_shutdown_timeout=' + env['HARAKA_SMTP_FORCE_SHUTDOWN_TIMEOUT'] if env['HARAKA_SMTP_FORCE_SHUTDOWN_TIMEOUT'] else '' }}

; SMTP service extensions: https://tools.ietf.org/html/rfc1869
; strict_rfc1869 = false
{#- | smtp.ini | HARAKA_SMTP_STRICT_RFC1869 | false |   | #}
{{ 'strict_rfc1869=' + env['HARAKA_SMTP_STRICT_RFC1869'] if env['HARAKA_SMTP_STRICT_RFC1869'] else '' }}

; Advertise support for SMTPUTF8 (RFC-6531)
;smtputf8=true
{#- | smtp.ini | HARAKA_SMTP_SMTPUTF8 | false |   | #}
{{ 'smtputf8=' + env['HARAKA_SMTP_SMTPUTF8'] if env['HARAKA_SMTP_SMTPUTF8'] else '' }}

[headers]
;add_received=true
{#- | smtp.ini | HARAKA_SMTP_ADD_RECEIVED | false |   | #}
{{ 'add_received=' + env['HARAKA_SMTP_ADD_RECEIVED'] if env['HARAKA_SMTP_ADD_RECEIVED'] else '' }}

;clean_auth_results=true
{#- | smtp.ini | HARAKA_SMTP_CLEAN_AUTH_RESULTS | false |   | #}
{{ 'clean_auth_results=' + env['HARAKA_SMTP_CLEAN_AUTH_RESULTS'] if env['HARAKA_SMTP_CLEAN_AUTH_RESULTS'] else '' }}

; replace header_hide_version
;show_version=true
{#- | smtp.ini | HARAKA_SMTP_SHOW_VERSION | false |   | #}
show_version={{ env['HARAKA_SMTP_SHOW_VERSION'] or 'false' }}

; replace max_header_lines
{#- | smtp.ini | HARAKA_SMTP_MAX_HEADER_LINES | 1000 |   | #}
max_lines={{ env['HARAKA_SMTP_MAX_HEADER_LINES'] or 1000 }}

; replace max_received_count
{#- | smtp.ini | HARAKA_SMTP_MAX_RECEIVED_COUNT | 100 |   | #}
max_received={{ env['HARAKA_SMTP_MAX_RECEIVED_COUNT'] or 100 }}